
LinkedList primesList;
	LinkedList *head = &primesList;
	LinkedList* PrimListLast = head;
	

	LinkedList::initNode(head, 10);
	LinkedList::display(head);


	PrimListLast = LinkedList::addNode(PrimListLast, 20 );
	LinkedList::display(head);




	/*	PrimListLast = LinkedList::addNode(PrimListLast, 5);
	PrimListLast = LinkedList::addNode(PrimListLast, 7);
	PrimListLast = LinkedList::addNode(PrimListLast, 37);
	//LinkedList::display(head);
	unsigned long long prim = 3;
	while (prim <= 1000000000) {
		IsItAPrime a;
		if (a.isItAPrime(prim, head)) {
			PrimListLast = LinkedList::addNode(PrimListLast, prim);
			Observer::logPrime(prim);
		}
		prim= prim + 2;
	}
	LinkedList::display(head);*/





		LinkedList primesList;
	LinkedList *head = &primesList;
	LinkedList* PrimListLast = head;
	LinkedList::initNode(head, 3);
	LinkedList::display(head);

	unsigned long long i = 0;
	while(true) {
		PrimListLast = LinkedList::addNode(PrimListLast, ++1);
		

	}





	bool threadActive[16];
bool threadNotDelete[16];
bool threadIsPrime[16];
unsigned long long threadToCalculate[16];
int nuberOfWorker; 
LinkedList primesList;







#ifdef _WIN32
#elif __linux__
#endif



DOTO:
insertlist
WorkerMulticore
init-note